const wait = require("node:timers/promises").setTimeout;
const { Configuration, OpenAIApi } = require("openai");
const { SlashCommandBuilder, EmbedBuilder } = require("discord.js");
const { OPENAI_API_KEY } = require("../config.json");

const configuration = new Configuration({
  apiKey: OPENAI_API_KEY,
});

const openai = new OpenAIApi(configuration);

module.exports = {
  data: new SlashCommandBuilder()
    .setName("create")
    .setDescription("There are endless possibilities...")
    .addStringOption((option) =>
      option
        .setName("input")
        .setDescription("Enter your prompt")
        .setRequired(true)
    ),

  async execute(interaction) {
    await interaction.deferReply();
    await wait(3000);
    const prompt = await interaction.options.getString("input");

    const aiResponse = await openai.createImage({
      prompt,
      n: 4,
      size: "1024x1024",
      response_format: "url",
    });

    const imageUrl1 = aiResponse.data.data[0].url;
    const imageUrl2 = aiResponse.data.data[1].url;
    const imageUrl3 = aiResponse.data.data[2].url;
    const imageUrl4 = aiResponse.data.data[3].url;

    // The client aggregates embeds that are part of the same message, as long as the URL property is the exact same.
    const embeds = [
      new EmbedBuilder()
        .setColor("#66ffff")
        .setDescription(prompt)
        .setURL("https://discord.js.org/#/")
        .setImage(imageUrl1)
        .setTimestamp()
        .setFooter({ text: `Generated by DALL-E \nCreated by: ${interaction.user.username}` }),
      new EmbedBuilder()
        .setURL("https://discord.js.org/#/")
        .setImage(imageUrl2),
      new EmbedBuilder()
        .setURL("https://discord.js.org/#/")
        .setImage(imageUrl3),
      new EmbedBuilder()
        .setURL("https://discord.js.org/#/")
        .setImage(imageUrl4),
    ];

    await interaction.editReply({ embeds });
  },
};
